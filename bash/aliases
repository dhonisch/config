# Utility

alias reload='source ~/bin/dotfiles/bash/aliases'

OS=`uname`

if [[ "$OS" == 'Darwin' ]]; then
    alias ea='mvim -f ~/bin/dotfiles/bash/aliases && reload' # edit aliases
    alias ee='mvim --remote-silent ~/bin/dotfiles/bash/env'
    alias ev='mvim --remote-silent ~/bin/vim/vim-commands.txt'
    alias gv='mvim --remote-silent'
    alias gw='mvim -f'
    alias gvs='mvim --remote-silent .git/index'

    alias ec='emacsclient --no-wait'
    alias em='open -a Emacs'

    alias ofi='open . &'
    alias off='open -a Firefox'

    alias l='ls -G -l -h -t' # long, human, color, sort by time
    alias ls='ls -G'
    alias la='ls -G -l -A'   # long, almost all. color
    alias l.='ls -d .[^.]*'
else
    alias ea='gvim -f ~/bin/dotfiles/bash/aliases && reload' # edit aliases
    alias ee='gvim --remote-silent ~/bin/dotfiles/bash/env'
    alias ev='gvim --remote-silent ~/bin/vim/vim-commands.txt'
    alias gv='gvim --remote-silent'
    alias gw='gvim -f'
    alias gvs='gvim --remote-silent .git/index'

    alias l='ls --color -l -h -t' # long, human, color, sort by time
    alias ls='ls --color'
    alias la='ls --color -l -A'    # long, almost all. color
    alias l.='ls -d .*'

    alias py='pyclewn --editor=/usr/bin/gvim'
fi

alias c='clear'
alias cl='clear; l'
alias cls='clear; ls'

alias md='mkdir -p'
alias s='cd ..'
alias e='exit'

alias tree="ls -R | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--|/g' -e 's/^/ /' -e 's/-/|/'"

# change to dir and ls
function cdl() { 
    cd $1; l 
}

# create dir and cd into it
function cnd() { 
    mkdir -p "$1"
    cd "$1" 
}

# processes
alias tu='top -o cpu'   # cpu
alias tm='top -o vsize' # memory

# git
alias ungit="find . -name '.git' -exec rm -rf {} \;"
alias gb='git branch'
alias gba='git branch -a'
alias gc='git commit -v'
alias gca='git commit -v -a'

# commit pending changes and quote all args as message
function gg() { 
    git commit -v -a -m "$*"
}

alias gco='git checkout'
alias gd='git diff'
alias gdm='git diff master'
alias gl='git pull'
alias glo='git pull origin master'
alias gp='git push'
alias gpo='git push origin master'
alias g='git status'

# git clone from github
function gch() {
  git clone git://github.com/mhalder/$1.git
}

# setup a tracking branch from [remote] [branch_name]
function gbt() { 
  git branch --track $2 $1/$2 && git checkout $2 
}

# quickly clobber a file and checkout
function grf() { 
  rm $1
  git checkout $1 
}

# call from inside an initialized Git repo, with the name of the repo.
function new-git() {
  ssh git@example.com "mkdir $1.git && cd $1.git && git --bare init"
  git remote add origin git@example.com:$1.git
  git push origin master
  git config branch.master.remote origin
  git config branch.master.merge refs/heads/master
  git config push.default current
}

function ct() {
  rm -f TAGS
  etags --append --output=TAGS $*
}

# setup a tunnel
function haproxyssh() { 
  ssh -L7997:127.0.0.1:7997 deploy@$1.com 
}

# from http://github.com/suztomo/dotfiles
function rmf() {
    for file in $*
    do
        __rm_single_file $file
    done
}

function __rm_single_file() {
    if ! [ -d ~/.Trash/ ]
    then
        command /bin/mkdir ~/.Trash
    fi

    if ! [ $# -eq 1 ]
    then
        echo "__rm_single_file: 1 argument required but $# passed."
        exit
    fi

    if [ -e $1 ]
    then
        BASENAME=`basename $1`
        NAME=$BASENAME
        COUNT=0
        while [ -e ~/.Trash/$NAME ]
        do
            COUNT=$(($COUNT+1))
            NAME="$BASENAME.$COUNT"
        done

        command /bin/mv $1 ~/.Trash/$NAME
    else
        echo "No such file or directory: $file"
    fi
}

