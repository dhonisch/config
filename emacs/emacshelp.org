** emacs
*** emacs
    - C-g :: quit command buffer (keyboard-quit)
    - C-x C-c :: leaving emacs (save-buffers-kill-terminal)
    - <ins> :: overwrite mode (overwrite-mode)
    - <none> :: recover from auto saved file #file# (recover-file)
    - C-x <esc> <esc> :: repeat last complex command
      - M-p :: go to previous
      - M-n :: go to next
    - <none> :: change value of variable (set-variable)
    - <none> :: compile .el to .elc to speed up starting (byte-recompile-directory)
    - C-h m :: show all current key bindings (describe-mode)
*** moving
    - C-n :: down (next-line)
    - C-p :: up (previous-line)
    - C-f :: right (forward-character)
    - C-b :: left (backward-character)
    - C-l :: center current line (recenter-top-botton)
    - M-f :: next word (forward-word)
    - M-b :: previous word (backward-word)
    - C-a :: start of line (move-beginning-of-line)
    - C-e :: end of line (move-end-of-line)
    - M-a :: previous sentence (backward-sentence)
    - M-e :: next sentence (forward-sentence)
    - M-< :: go to beginning of file (beginning-of-buffer)
    - M-> :: go to end of file (end-of-buffer)
    - C-v :: scroll page up (scroll-up)
    - M-v :: scroll page down (scroll-down)
    - M-g g :: goto line (goto-line)
    - <none> :: goto char (goto-char)
*** delete, copy and undo
    - C-_ and C-x u :: undo (undo)
    - C-d :: delete char (delete)
    - <Del> :: delete before char (backward-delete)
    - M-d :: kill a word forward (forward-kill-word)
    - C-<Bs> :: kill a word back (backward-kill-word)
    - C-k :: kill until end of line, also joining (kill)
    - C-w :: delete region (kill-region)
    - M-w :: copy, delete region without delete (kill-ring-save)
    - M-k :: delete sentence (kill-sentence)
    - C-x <Del> :: delete back to start of sentence (backward-kill-sentence)
    - C-y :: reinsert the last killed text (yank)
    - M-y :: yank older text from kill ring (yank-pop)
*** search and replace
    - C-s :: incremental search forward (isearch-forward-regexp)
      - M-p :: go to previous
      - M-n :: go to next
    - C-M-s :: redo last search forward (isearch-repeat-forward)
    - C-M-r :: redo last search backwards (isearch-repeat-backward)
    - C-s <enter> :: regular search
    - <none> :: word search (word-search-forward)
    - C-r :: incremental search backward (isearch-backward-regexp)
    - C-s C-w :: start search with word under cursor (isearch-yank-word)
    - C-s C-y :: start search with text until line end (isearch-yank-line)
    - C-s M-y :: start search with text from kill ring (isearch-yank-kill)
    - C-s C-s :: repeat last forward search (isearch-repeat-forward)
    - C-r C-r :: repeat last backward search (isearch-repeat-backward)
    - <none> :: replace a string from cursor forward (replace-string)
    - M-% :: query replace (query-replace)
      - <space> or y :: replace string
      - <del> or n :: dont replace, go to next
      - . :: replace and quit
      - , :: replace and show result but wait for ack
      - ! :: replace all the rest without asking
      - ^ :: back to previous instance
      - <enter> or q :: exit
      - E :: modify replacement string
      - C-r :: enter recursive edit
      - C-w :: delete instance and enter recursive edit
      - C-M-c :: exit recursive edit and resume
      - C-] :: exit recursive edit and exit query replace
    - <none> :: require exact search matches (setq-default case-fold-search t)
    - <none> :: option for fitting case (setq-default case-replace t)
*** marks
    - C-<space> :: set a mark (set-mark-command)
    - C-u C-<space> :: go to last mark
    - C-x C-x :: swap point and mark (exchange-point-and-mark)
    - M-h :: mark whole paragraph automatically (mark-paragraph)
    - C-x h :: mark whole buffer (mark-whole-buffer)
*** repeating
    - M-5 C-n :: repeat command 5 times, go 5 lines down (digit-argument)
    - C-u 5 :: repeat next command 5 times (universal-argument)
*** transposing
    - C-t :: transpose two chars (transpose-chars)
    - M-t :: transpose two words (transpose-words)
    - C-x C-t :: transpose two lines (transpose-lines)
*** zooming
    - C-+ :: increase font size (text-scale-increase)
    - C-- :: decrease font size (text-scale-decrease)
*** capitalizing
    - M-c :: capitalize first letter of word (capitalize-word)
    - M-u :: uppercase word (upcase-word)
    - M-l :: downcasw word (downcase-word)
    - Meta-M-c :: capitalize previous word (negative;capitalize-word)
    - Meta-M-u :: uppercase previous word (negative;upcase-word)
    - Meta-M-l :: downcase previous word (negative;downcase-word)
*** help
    - C-h k :: get help for key combination (describe-key)
    - C-h f :: get help for function (describe-function)
    - C-h i :: start info directory (info)
    - C-h t :: start emacs tutorial (help-with-tutorial)
    - C-h v :: print current value of variable (describe-variable)
    - C-h a :: make apropos search (apropos)
    - C-h i :: start info documentation reader info
    - C-h b :: show all defined keys (describe-bindings)
    - <none> :: open man page (man)
    - q :: quit help
*** autocompletion
    - <Esc> <Tab> :: try to complete current word (completion-at-point)
    - <none> :: complete current word with ispell (ispell-complete-word)
*** files
    - C-x C-f :: opening a file (find-file)
    - C-x M-f :: opening a file in other window (find-file-other-window)
    - C-x C-p :: mark a whole page
    - C-x C-v :: open different file (find-alternate-file)
    - C-x C-s :: save buffer (save-buffer)
    - C-x s :: save all buffer (save-some-buffers)
    - C-x C-w :: save file as (write-file)
    - C-x i :: insert file at position (insert-file)
    - C-x C-q :: make buffer readonly (toggle-read-only)
*** windows and buffers
    - <none> :: create new frame (make-frame)
    - <none> :: create new frame on xserver display (make-frame-on-display)
    - C-x 0 :: delete current window (delete-window)
    - C-x 1 :: close all windows except current one (delete-other-windows)
    - C-x 2 :: split window vertically (split-window-vertically)
    - C-x 3 :: split window horizontally (split-window-horizontally)
    - C-x b :: switch to buffer, do not link to file, use C-k to kill selected (switch-to-buffer)
    - C-x C-b :: ibuffer edit list of buffers
      - h :: display help
      - m :: mark
      - u :: unmark
      - d :: mark buffer for delete
      - x :: execute kill
      - k :: remove marked buffers (only from view)
      - S :: save marked buffers
    - C-x o :: switch to other window (other-window)
    - C-x 4 b :: open buffer in other window (switch-to-buffer-other-window)
    - C-x C-f :: opening a buffer, new if does not exist (find-file)
    - C-x k :: close buffer (kill-buffer)
    - <none> :: ask interactively to clean up (kill-some-buffers)
    - <none> :: delete all windows on a buffer (delete-windows-on)
    - C-M-v :: scroll down in other window (scroll-other-window)
    - C-x < :: scroll to left (scroll-left)
    - C-x > :: scroll to right (scroll-right)
    - C-x ^ :: increase window size (enlarge-window)
    - <none> :: decrease window size (shrink-window)
    - C-x } :: increase window size horizontally (enlarge-window-horizontally)
    - C-x { :: decrease window size horizontally (shrink-window-horizontally)
    - C-x - :: shrink window if bigger than buffer (shrink-window-if-larger-than)
    - C-x + :: create equal size windows (balance-windows)
    - <none> :: show first difference of two windows (compare-windows)
*** filling and formatting
    - <none> :: toggle auto fill mode (auto-fill-mode)
    - <none> :: reformat paragraph (fill-paragraph)
    - <none> :: reformat region with paragraphs (fill-region)
*** key mapping
    - <none> :: map undo to C-c m (global-set-key "\C-cm" 'undo)
*** spell checker
    - <none> :: start checking current buffer (ispell-buffer)
    - M-$ :: checking current word (ispell-word)
    - <none> :: background spell checking mode (flyspell-mode)
    - <none> :: only in comments (flyspell-prog-mode)
    - <none> :: check current buffer (existing) (flyspell-buffer)
*** abbreviations
    - M-/ :: dynamic search for matching word, do multiple times (hippie-expand)
    - <none> :: go to abbreviation mode (abbrev-mode)
    - word C-x a g :: enter abbrev for word global (local with l) (add-global-abbrev)
    - <none> :: list all abbrevs, listed by mode (list-abbrevs)
    - <none> :: editable list, then (edit-abbrevs)
    - <none> :: save changes (write-abbrev-file)
    - <none> :: disables abbrevs for current session (kill-all-abbrevs)
    - <none> :: options for .emacs file (setq-default abbrev-mode t)
    - <none> :: set file name (read-abbrev-file "~/.abbrev_defs")
    - <none> :: enable saving (setq save-abbrevs t)
*** bookmarks
    - C-x r m :: set bookmark (bookmark-set)
    - C-x r b :: jump to bookmark (bookmark-jump)
    - C-x r l :: list all bookmarks (bookmark-bmenu-list)
      - <Enter> :: go to bookmark
      - f or j :: go to bookmark
      - d :: mark bookmark for delete
      - x :: execute kill
      - r :: rename bookmark
      - s :: save all bookmarks to .emacs.bmk
      - m :: mark bookmark
      - m :: unmark bookmark
      - v :: view all marked bookmarks
      - t :: toggle view
      - o :: open bookmark in new window
      - w :: display location of file in minibuffer
      - e :: add annotation to bookmark (quit with C-c C-c, need to save)
      - a :: list annotation
      - A :: list all annotations
      - q :: quit bookmark list
    - <none> :: rename bookmark (bookmark-rename)
    - <none> :: delete bookmark (bookmark-delete)
*** work environment
    - M-! :: run shell command (shell-command)
    - C-c s :: shell command on region, self mapped in custom.el (shell-command-on-region)
    - C-u M-! :: replace original buffer text
    - C-u C-c s :: replace original buffer text
*** shell mode
    - <none> :: start shell mode (shell)
    - C-c C-c :: <Ctrl>-c (comint-interrupt-subjob)
    - C-c C-z :: <Ctrl>-z (comint-stop-subjob)
    - C-d :: send EOF if end of buffer; else del character (comint-delchar-or-maybe-eof)
    - C-c C-d :: <Ctrl>-d (comint-send-of)
    - M-p :: previous shell commands (comint-previous-input)
    - M-n :: next shell commands (comint-next-input)
    - C-c C-o :: flush long shell output (comint-kill-output)
    - C-c C-r :: go to start of output (comint-show-output)
    - C-c C-e :: go to end of output (comint-show-maximum-output)
    - C-c C-p :: go to previous command group (comint-previous-prompt)
    - C-c C-n :: go to next command group (comint-next-prompt)
    - C-c C-u :: clear input line <Ctrl>-u (comint-kill-input)
    - <none> :: rename shell to create second one (rename-uniquely)
    - shell-file-name :: contains name of shell
    - .emacs_bash :: emacs specific initialization
    - <none> :: enter nonechoed text (send-invisible)
*** emacs shell
    - C-x m :: start emacs shell (eshell)
*** directory editor
    - C-x d :: start directory editor (dired)
      - <none> :: if you dont see colored directories ((global-font-lock-mode t))
      - s :: sort alpha or by date (dired-sort-toggle-or-edit)
      - n or p :: move up or down
      - v :: quick view file or directory (dired-view-file)
        - s :: search
        - = :: tell which is current line
        - q :: go back
      - e or f :: edit file in normal edit buffer
      - <enter> :: edit file in normal edit buffer
      - C-s :: search
      - m :: mark
      - u :: unmark
      - d :: mark file for delete
      - x :: execute kill
      - # :: mark auto-save files for deletion
      - h :: display help
      - k :: remove marked buffers (only from view)
      - D :: delete immediately
      - C :: copy file
      - R :: rename file, if more files then move
      - S :: symlink file
      - %l %u :: change marked files to uppercase or lowercase
      - Z :: compress or uncompress file
      - <none> :: enable or disable automatic compression mode (compress-mode)
      - = :: create diff in a diff buffer
      - M-= :: diff to backup file
      - ! :: run command on file (* for marked files) eg. sort * > sorted
      - g :: update view
      - M-<del> :: unmark all files (dired-unmark-all-files)
      - * * :: mark all executable files
      - * / :: mark all directories
      - * @ :: mark all symbolic links
      - <none> :: regexp for garbage files (dired-garbage-files-regexp)
      - %m :: mark files by regexp
      - %g :: mark files by content regexp
      - + :: create directory
      - Q :: query replace through all marked files
      - A :: search across files for regexp
      - ^ :: go to parent directory
      - < > :: go to previous or next directory
      - i :: insert subdir in current buffer
*** macros
    - C-x ( :: start macro recording (kmacro-start-macro)
    - C-x ) :: end recording (kmacro-end-macro)
    - C-x e :: playback recorded macro (kmacro-end-and-call-macro)
    - C-x C-k e :: edit macro (edit-kbd-macro)
*** programming modes
    - M-; :: comment region (comment-dwim)
    - M-. :: find tag (find . | xargs egrep -a -f TAGS) (find-tag)
    - <none> :: invoke to load a new TAGS file (visit-tags-table)
    - C-c i :: indent region according to indent rules, self mapped in custom.el (indent-region)
*** vc mode
    - C-x v = :: diff against head (vc-diff)
    - C-u C-x v = :: compare two arbitrary revisions
    - C-x v u :: discard changes (vc-revert)
    - C-x v ~ :: open arbitrary revision in other window (vc-revision-other-window)
    - C-x v l :: view commit log (vc-print-log)
      - f :: view revision
      - d :: view diff
    - C-x v i :: add unrevisioned file
*** font
    - <none> :: (set-face-attribute 'default nil :font '"DejaVu Sans Mono-10")
*** cool extensions
    - magit :: vc mode for git
    - flymake-mode :: spell correction
    - follow-mode :: no idea
    - whitespace-mode :: show wrong whitespaces
*** org mode
**** task planning and agenda
     - C-M-r :: add a task or note to todo.org (remember)
     - C-c C-s :: schedule an item (org-schedule)
     - C-c C-w :: refile a task to subtree (org-refile)
     - C-c C-x C-s :: move a subtree to archive (org-archive-subtree)
     - . :: go to current day
     - , :: change priority
     - d :: switch to current day
     - r :: refresh agenda
     - C-c a :: show next weeks tasks (org-agenda-list)
     - C-c t :: show todo list (org-todo-list)
     - C-c m :: show matching tags (org-tags-view)
     - C-c C-c :: set a tag
**** useful org commands
     - C-c C-x b :: show subtree in an indirect buffer (org-tree-to-indirect-buffer)
     - C-x n s :: narrow subtree to current (org-narrow-to-subtree)
     - C-x n w :: widen subtree view again (widen)
     - C-c * :: turn all marked entries to headlines and back (org-ctrl-c-star)
     - C-c / :: sparse tree (org-sparse-tree)
     - M-g n :: jump to next sparse tree match (next-error)
     - M-g p :: jump to next sparse tree match (previous-error)
